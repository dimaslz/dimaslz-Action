name: "dimaslz Deploy"
description: "Automate deploying websites in server with docker"
author: "Dimas LÃ³pez aka. dimaslz"
inputs:
  server_ip:
    required: true
    description: "IP of your machine to deploy the applications, example: 12.34.56.78"

  user:
    required: true
    description: "User to connect to your machine, example: root"

  ssh_private_key:
    required: true
    description: "SSH private key from your application secrets, to connect to the server, example: `${{ secrets.CONNECTION_PRIVATE_KEY }}`"

  app_host:
    required: true
    description: "application host, as for example: your-domain.com. Will create a config to serve the application in: `${app_name}.your-domain.com`"

  app_name:
    required: false
    description: "application name in kebab case format, as for example: my-app. Finally will serve the application in: https://my-app.your-domain.com. By default repo name"

  app_ports:
    required: false
    description: "port where is serve the application, for example: 8080"

  source:
    required: false
    description: "where the application create the build. By default /dist"

  dockerfile:
    required: false
    description: "do you want to deploy an specific Dockerfile?. Setup the source as for example: '.'"

  env:
    required: false
    description: "your environment vars for the app. Check demo in README.md"

  static:
    required: false
    description: "boolean, by default false. Will create the environment for an static o server app"

  run_command:
    required: false
    description: "for static sites, will is not needed command, for server apps, by default will use `yarn start`, but you can specify the command to run your application for any stack"

  build_command:
    required: false
    description: "by default, we will use 'yarn build' but, you can specify an specific command"

  wildcard_ssl:
    required: false
    description: "by default 'false', set to 'true' if the final url of the project is *.*.domain.tld and, automatically, the action will create an SSL certificate by Certbot (not ready to use, experimental WIP)"

  env_name:
    required: false
    description: "by default 'production', but you can setup the tag as you want. This will not affect to the domain."

  repo_token:
    required: false
    description: "by default null, but you can setup repo_token: 'secrets.GITHUB_TOKEN'"

runs:
  using: "docker"
  image: "Dockerfile"
branding:
  icon: "upload-cloud"
  color: "orange"
